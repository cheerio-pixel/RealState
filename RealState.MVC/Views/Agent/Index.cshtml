
@using RealState.Application.QueryFilters
@{
    Layout = "~/Views/Shared/_Layoutproperty.cshtml";
    List<PropertyViewModel> properties = ViewBag.Properties;
    List<PropertyTypeViewModel> propertyTypes = ViewBag.PropertysTypes;
    PropertyQueryFilter propertyQueryFilter = ViewBag.Filter;
}
<div>
        <div class="form">
                <h3 class="mb-3">Search for a building</h3>
            <form method="get" asp-controller="agent" asp-action="index">

                <div class="form-group">
                    <input type="text" placeholder="Building Code" name="Code" class="form-control"
                    value="@propertyQueryFilter.Code">
                </div>
                <div class="form-group row">
                    <select id="inputState" name="PropertyTypeId" class="form-control">
                            <option selected>Choose building type...</option>
                           @{
                               if(propertyTypes.Count > 0)
                               {
                                   foreach(var propertyType in propertyTypes)
                                   {
                                       if (propertyQueryFilter.PropertyTypeId == @propertyType.Id)
                                       {
                                            <option selected value="@propertyType.Id">@propertyType.Name</option>
                                       }
                                       else
                                       {
                                       <option value="@propertyType.Id">@propertyType.Name</option>
                                       }
                                   }
                               }
                           }
                        </select>
                    </div>
                    <!--Average price searching-->
                    <div class="form-group">
                    <input value="@(propertyQueryFilter.Rooms == 0 ? "" : propertyQueryFilter.Rooms)" type="text" placeholder="Bedrooms number" name="Rooms" class="form-control">
                </div>
                 <div class="form-group">
                    <input value="@(propertyQueryFilter.Bathrooms == 0 ? "" : propertyQueryFilter.Bathrooms)" type="text" placeholder="Bathrooms number" name="Bathrooms" class="form-control">
 <!-- Minimum price input -->
<div class="form-group">
    <input value="@(propertyQueryFilter.MinPrice == 0 ? "" : propertyQueryFilter.MinPrice)" type="number" placeholder="Minimum Price" name="MinPrice" class="form-control" id="minPrice">
</div>

<!-- Maximum price input -->
<div class="form-group">
    <input value="@(propertyQueryFilter.MaxPrice == 0 ? "" : propertyQueryFilter.MaxPrice)" type="number" placeholder="Maximum Price" name="MaxPrice" class="form-control" id="maxPrice">
</div>
                 </div>
                <div>
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
        </div>

<div class="property-container">

    <a href="/agent/Create" class="create-card">
        <i class="fa fa-plus"></i>
    </a>
    @{
        @if (properties.Count > 0)
        {
            @foreach (var property in properties)
            {
                    <div class="card-house">
                        <div class="header-house">
                            <img src="@property.Pictures[0].Picture" alt="house" />
                        </div>
                        <div class="description-house">
                            <div class="title">
                                <h2>@property.Name</h2>
                                <div class="dropdown">
                                    <button class="btn btn-link dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fa fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <li><a class="dropdown-item" href="/agent/update/@property.Id">Update</a></li>
                                        <li>
                                            <form id="form-delete-@property.Id" method="post" asp-action="Delete">
                                                <input type="hidden" name="id" value="@property.Id" />
                                                <button type="button" class="dropdown-item" onclick="confirmDelete('@property.Id')">Delete</button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="description">
                                <p>@property.Description</p>
                            </div>
                            <div class="characteristics">
                                <div class="tag-house">
                                    <i class="fa-solid fa-bed"></i>
                                    <p>@property.Rooms</p>
                                </div>
                                <div class="tag-house">
                                    <i class="fa-solid fa-bath"></i>
                                    <p>@property.Bathrooms</p>
                                </div>
                                <div class="tag-house">
                                    <i class="fa-solid fa-ruler"></i>
                                    <p>@property.Meters m2</p>
                                </div>
                            </div>
                        </div>
                        <div class="price">
                            <p>@property.Price.ToString("C")</p>
                        </div>
                    </div>
            }
        }
        }
</div>
</div>

            <script>
     $(document).ready(function() {
        var minPriceInput = $('#minPrice');
        var maxPriceInput = $('#maxPrice');

        // Store the initial values
        var previousMinPrice = minPriceInput.val();
        var previousMaxPrice = maxPriceInput.val();

        minPriceInput.on('blur', function() {
            var minPrice = parseFloat(minPriceInput.val());
            var maxPrice = parseFloat(maxPriceInput.val());

            if (minPrice > maxPrice) {
                alert('Minimum Price cannot be greater than Maximum Price.');
                minPriceInput.val(previousMinPrice); // Revert to previous value
            } else {
                previousMinPrice = minPrice; // Update the previous value
            }
        });

        maxPriceInput.on('blur', function() {
            var minPrice = parseFloat(minPriceInput.val());
            var maxPrice = parseFloat(maxPriceInput.val());

            if (maxPrice < minPrice) {
                alert('Maximum Price cannot be less than Minimum Price.');
                maxPriceInput.val(previousMaxPrice); // Revert to previous value
            } else {
                previousMaxPrice = maxPrice; // Update the previous value
            }
        });
    });
               function confirmDelete(id){
    Swal.fire({
  title: "Estas seguro?",
  text: "Los cambios no podran revertirse!",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Si, eliminalo!"
}).then((result) => {
  if (result.isConfirmed) {
    Swal.fire({
      title: "Eliminado!",
      text: "Tu Propiedad ha sido eliminado.",
      icon: "success"
    });
    console.log(id)
    const form = document.getElementById(`form-delete-${id}`)
    form.submit()
  }
});
}
            </script>

